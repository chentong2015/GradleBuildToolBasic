plugins {
    id 'java'
    // TODO. 引入依赖管理插件
    id 'io.spring.dependency-management' version "1.1.7"
}

compileJava {
    options.encoding = 'UTF-8'
}

repositories {
    mavenCentral()

    // 指定本地的仓库
    flatDir {
        dirs "libs"
    }
}

// TODO. 统一管理依赖的多个版本: Bill of Materials (BOM)
dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:2024.0.0'
    }
}

// TODO. 配置在不同阶段所需的依赖
dependencies {
    compileOnly 'commons-io:commons-io:2.18.0'
    runtimeOnly 'org.apache.commons:commons-lang3:3.17.0'
    implementation 'com.google.guava:guava:33.4.6-jre'

    testCompileOnly 'junit:junit:4.13.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'

    // TODO. 以下依赖需要在编译源码时使用注解解析器(还原Java Bean类型)
    compileOnly 'org.projectlombok:lombok:1.18.36'
    annotationProcessor 'org.projectlombok:lombok:1.18.36'
    annotationProcessor 'org.mapstruct:mapstruct:1.6.3'

    // 该依赖版本由dependencyManagement所管理
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

    // 从依赖中移除特定的依赖
    implementation('org.springframework.boot:spring-boot-starter-batch:3.4.4') {
        exclude group:'ch.qos.logback', module:'logback-classic'
    }

    // TODO. 从当前模块本地相对路径添加依赖
    implementation files('libs/httpclient5-5.4.2.jar')
    // implementation fileTree(dir: 'libs', include: ['*.jar'])
    // implementation fileTree(dir: "${rootProject.projectDir}/libs", include: "*.jar")
}